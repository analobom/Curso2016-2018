1. Get all the classes
select distinct ?x
where
{ ?x a rdfs:Class }
LIMIT 100

2. Get all the subclasses of the class Establishment
select distinct ?x 
where 
{ ?x rdfs:subClassOf <http://GP-onto.fi.upm.es/exercise2#Establishment> } 
LIMIT 100

3. Get all instances of the class City
PREFIX cc: <http://GP-onto.fi.upm.es/exercise2#> 
Select distinct ?x
where
{ ?x a cc:City. }
LIMIT 100

4.Get the number of inhabitants of Santiago de Compostela
PREFIX cc: <http://GP-onto.fi.upm.es/exercise2#> 
SELECT ?habitantes 
WHERE
{ cc:Santiago_de_Compostela cc:hasInhabitantNumber ?habitantes.}

5.Get the number of inhabitants of Santiago de Compostela and Arzua
PREFIX cc: <http://GP-onto.fi.upm.es/exercise2#> 
SELECT ?habitantesS ?habitantesA 
WHERE
{ cc:Santiago_de_Compostela cc:hasInhabitantNumber ?habitantesS. cc:Arzua cc:hasInhabitantNumber ?habitantesA. }

6.Get all places, together with the number of inhabitants, ordered by the place name (ascending)
PREFIX cc: <http://GP-onto.fi.upm.es/exercise2#> 
SELECT ?lugar ?numHabitantes WHERE { 
 ?lugar cc:hasInhabitantNumber ?numHabitantes.
} ORDER BY ASC(?lugar)

7.Get all instances of  Locality together with their number of inhabitants (if this information exists)
PREFIX cc: <http://GP-onto.fi.upm.es/exercise2#> 
SELECT ?localidad ?numHabitantes WHERE { 
 ?localidad a cc:Locality;
 cc:hasInhabitantNumber ?numHabitantes.
}

8.Get all places with more than 200.000 inhabitants
PREFIX cc: <http://GP-onto.fi.upm.es/exercise2#> 
SELECT ?lugares ?numHabitantes WHERE { 
 ?lugares cc:hasInhabitantNumber ?numHabitantes
 FILTER(?numHabitantes > 200000) 
}

9.Get postal address data for Pazo_Breogan (street, number, locality, province)
PREFIX cc: <http://GP-onto.fi.upm.es/exercise2#> 
SELECT ?calle ?numero ?localidad ?provincia
WHERE { 
cc:Pazo_Breogan cc:hasAddress ?dir; 
cc:isPlacedIn ?localidad. 
?localidad cc:inProvince ?provincia. 
?dir cc:hasStreet ?calle; 
cc:hasNumber ?numero.
}

10.Get all subclasses of class Location
PREFIX cc: <http://GP-onto.fi.upm.es/exercise2#> 
SELECT ?subclasesLocation WHERE { 
 ?subclasesLocation rdfs:subClassOf cc:Location. 
}

11. Get all instances of class Locality
PREFIX cc: <http://GP-onto.fi.upm.es/exercise2#> 
SELECT ?locality WHERE { 
 ?locality rdfs:subClassOf cc:Location. 
}

12. Describe the resource with rdfs:label "Madrid”
DESCRIBE ?recurso WHERE{
?recurso rdfs:label "Madrid"
}

13.Construct a graph that relates directly all touristic places with their provinces, using a new property called ”isIn”
PREFIX cc: <http://GP-onto.fi.upm.es/exercise2#>
CONSTRUCT {?subject cc:isIn ?object} WHERE {
 ?subject a cc:TouristicLocation;
 cc:isPlacedIn ?pob.
 ?pob cc:inProvince ?object. 
}

14. Check whether there is any instance of Town
PREFIX cc: <http://GP-onto.fi.upm.es/exercise2#> 
ASK WHERE {
 ?instance a cc:Town
}





8
